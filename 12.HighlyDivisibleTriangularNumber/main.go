/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/
package main

import (
	"fmt"
	"math"
)

func findTheValue() (value int) {
	count := 0
	for i := 1; true; i++ {
		value = 0
		for j := 1; j <= i; j++ {
			value += j
		}
		temp := int(math.Sqrt(float64(value)))
		for k := 1; k <= temp; k++ {
			if value%k == 0 {
				count++
			}
		}
		if count > 250 { // there is bug if temp^2 == value
			break
		}
		count = 0
	}
	return
}

func main() {
	value := findTheValue()
	fmt.Println(value)
}
